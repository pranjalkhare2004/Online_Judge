name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Backend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./Backend
      run: npm ci
      
    - name: Run linting
      working-directory: ./Backend
      run: npm run lint || echo "Linting not configured"
      
    - name: Run tests
      working-directory: ./Backend
      run: npm test || echo "Tests not configured"
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/online-judge-test
        JWT_SECRET: test-secret

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push Docker image
      working-directory: ./Backend
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: online-judge-backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Update and restart the backend service
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          docker pull ${{ secrets.ECR_REGISTRY }}/online-judge-backend:latest
          docker stop online-judge-backend || true
          docker rm online-judge-backend || true
          docker run -d \
            --name online-judge-backend \
            -p 5000:5000 \
            --restart unless-stopped \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e NODE_ENV=production \
            -e MONGODB_URI=${{ secrets.MONGODB_URI }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e CORS_ORIGIN=${{ secrets.CORS_ORIGIN }} \
            ${{ secrets.ECR_REGISTRY }}/online-judge-backend:latest
